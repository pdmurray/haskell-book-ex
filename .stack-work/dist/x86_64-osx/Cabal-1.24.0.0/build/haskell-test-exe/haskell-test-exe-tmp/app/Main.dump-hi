
==================== FINAL INTERFACE ====================
2017-04-12 20:49:24.032284 UTC

interface main@main:Main 8001
  interface hash: 77760c0e23434fdaeabdf7ef47f55fd6
  ABI hash: 440c7b1f1dd1665e91f8de037f88bff9
  export-list hash: 1d2a0ce38367bcc5ea811b23273de32a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 96d97f9981767c93d55655a9d1401953
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      haskell-test-0.1.0.0@haskell-test-0.1.0.0-FxlLolieE3cKLo0nZvEDeK
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  haskell-test-0.1.0.0@haskell-test-0.1.0.0-FxlLolieE3cKLo0nZvEDeK:Lib 4ae9a833b411a0e9241a5942982fc1c8
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
b8cc0b7542c00fec5247a5c80248971a
  main :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
79395967f7ec058cc8130d8e8fe8a52f
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Unfolding: (Lib.someFunc1 Main.main2) -}
b351399112ac045de8b7e35ee297557e
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Haskell"#) -}
39073841b7803d7f2da334a8a30edf84
  main3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

